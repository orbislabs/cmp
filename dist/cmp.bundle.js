/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./client/main.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./client/cmp.js":
/*!***********************!*\
  !*** ./client/cmp.js ***!
  \***********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar Cmp =\n/*#__PURE__*/\nfunction () {\n  function Cmp(config) {\n    var store = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, Cmp);\n\n    this.isLoaded = false;\n    this.cmpId = config.cmpId;\n    this.cmpVersion = config.cmpVersion;\n    this.cookieVersion = config.cookieVersion;\n    this.gdprApplies = config.gdprApplies;\n    this.storeConsentGlobally = config.storeConsentGlobally;\n    this.store = store; // this.store = store;\n    // function decraled and fired to log the creation of the CMP\n\n    this.log = function () {\n      console.log('Cmp -> class created');\n    };\n\n    this.log();\n  }\n\n  _createClass(Cmp, [{\n    key: \"ping\",\n    value: function ping() {\n      var empty = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};\n      var result = {\n        gdprAppliesGlobally: this.storeConsentGlobally,\n        // config.storeConsentGlobally - get this from the config file\n        cmpLoaded: true\n      };\n      callback(result, true);\n    }\n    /**\n     * Get all vendor consent data from the data store.\n     * @param {Array} vendorIds Array of vendor IDs to retrieve.  If empty return all vendors.\n     */\n\n  }, {\n    key: \"getVendorConsents\",\n    value: function getVendorConsents(vendorIds) {\n      var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};\n\n      if (vendorIds === undefined || vendorIds != (typeof Array === \"undefined\" ? \"undefined\" : _typeof(Array))) {\n        console.error(\"\".concat(arguments[0], \" is not of type Array\"));\n      }\n\n      var consent = {};\n      callback(result, true);\n    }\n  }]);\n\n  return Cmp;\n}();\n/* const consent = {\n    metadata: this.generateConsentString(),\n    gdprApplies: config.gdprApplies,\n    hasGlobalScope: config.storeConsentGlobally,\n    ...this.store.getVendorConsentsObject(vendorIds)\n}; \n */\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Cmp);\n\n//# sourceURL=webpack:///./client/cmp.js?");

/***/ }),

/***/ "./client/config.js":
/*!**************************!*\
  !*** ./client/config.js ***!
  \**************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nvar defaultConfig = {\n  cmpId: 1,\n  cmpVersion: 1,\n  cookieVersion: 1,\n  storeConsentGlobally: true,\n  gdprApplies: true //customPurposeListLocation: './purposes.json',\n  //globalVendorListLocation: 'https://vendorlist.consensu.org/vendorlist.json',\n  //logging: false\n\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (defaultConfig);\n\n//# sourceURL=webpack:///./client/config.js?");

/***/ }),

/***/ "./client/cookies.js":
/*!***************************!*\
  !*** ./client/cookies.js ***!
  \***************************/
/*! exports provided: checkCookiesEnabled, readCookie, writeCookie */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"checkCookiesEnabled\", function() { return checkCookiesEnabled; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"readCookie\", function() { return readCookie; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"writeCookie\", function() { return writeCookie; });\nvar host = window && window.location && window.location.hostname || '';\nvar parts = host.split('.');\nvar COOKIE_DOMAIN = parts.length > 1 ? \";domain=.\".concat(parts.slice(-2).join('.')) : '';\nvar COOKIE_MAX_AGE = 33696000;\nvar COOKIE_NAME = 'euconsent';\nvar PATH = '/';\nfunction checkCookiesEnabled() {\n  var cookieEnabled = navigator.cookieEnabled ? true : false;\n\n  if (typeof navigator.cookieEnabled == \"undefined\" && !cookieEnabled) {\n    document.cookie = \"testcookie\";\n    cookieEnabled = document.cookie.indexOf(\"testcookie\") != -1 ? true : false;\n  }\n\n  return cookieEnabled;\n}\nfunction readCookie(name) {\n  var value = '; ' + document.cookie;\n  var parts = value.split('; ' + name + '=');\n\n  if (parts.length === 2) {\n    return Promise.resolve(parts.pop().split(';').shift());\n  }\n\n  return Promise.resolve();\n}\nfunction writeCookie(value) {\n  //document.cookie = 'euconsent=cookieforyoubitch!;path=/'\n  document.cookie = \"\".concat(COOKIE_NAME, \"=\").concat(value).concat(COOKIE_DOMAIN, \";path=\").concat(PATH, \";max-age=\").concat(COOKIE_MAX_AGE);\n  return Promise.resolve();\n}\n\n//# sourceURL=webpack:///./client/cookies.js?");

/***/ }),

/***/ "./client/main.js":
/*!************************!*\
  !*** ./client/main.js ***!
  \************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _cmp_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cmp.js */ \"./client/cmp.js\");\n/* harmony import */ var _config_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./config.js */ \"./client/config.js\");\n/* harmony import */ var _vendorList_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./vendorList.js */ \"./client/vendorList.js\");\n/* harmony import */ var consent_string__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! consent-string */ \"./node_modules/consent-string/dist/index.js\");\n/* harmony import */ var consent_string__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(consent_string__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _cookies_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./cookies.js */ \"./client/cookies.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n// Pluto CMP++ v1\n\n\n\n\n\n\nfunction start() {\n  if (!Object(_cookies_js__WEBPACK_IMPORTED_MODULE_4__[\"checkCookiesEnabled\"])()) {\n    console.log(\"CMP is unable to set cookies.\");\n    return;\n  }\n\n  var cmp = new _cmp_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](_config_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]);\n  cmp.isLoaded = true;\n  window.__cmp = cmp;\n} // this creates a globally available CMP instance\n\n\nstart();\nvar consentData = new consent_string__WEBPACK_IMPORTED_MODULE_3__[\"ConsentString\"](); // Modify the consent data\n//consentData.setCmpId(1);\n//consentData.setConsentScreen(1);\n//consentData.setGlobalVendorList(vendorList);\n//consentData.setPurposeAllowed(12, true);\n// Update the cookie value\n//writeCookie(consentData.getConsentString());\n\nfunction checkCmpCookie() {\n  var cookie = Object(_cookies_js__WEBPACK_IMPORTED_MODULE_4__[\"readCookie\"])('euconsent');\n  console.log(cookie);\n}\n\ncheckCmpCookie();\n\nvar Store = function Store() {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      vendorConsentData = _ref.vendorConsentData,\n      vendorList = _ref.vendorList,\n      customPurposeList = _ref.customPurposeList;\n\n  _classCallCheck(this, Store);\n\n  this.vendorConsentData, this.vendorList, this.customPurposeList;\n};\n\n//# sourceURL=webpack:///./client/main.js?");

/***/ }),

/***/ "./client/vendorList.js":
/*!******************************!*\
  !*** ./client/vendorList.js ***!
  \******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nvar vendorList = {\n  \"vendorListVersion\": 9,\n  \"lastUpdated\": \"2018-04-26T16:01:58Z\",\n  \"purposes\": [{\n    \"id\": 1,\n    \"name\": \"Storage and access of information\",\n    \"description\": \"The storage of information, or access to information that is already stored, on your device such as accessing advertising identifiers and/or other device identifiers, and/or using cookies or similar technologies.\"\n  }, {\n    \"id\": 2,\n    \"name\": \"Personalisation\",\n    \"description\": \"The collection and processing of information about your use of this site to subsequently personalize advertising for you in other contexts, i.e. on other sites or apps, over time. Typically, the content of the site or app is used to make inferences about your interests which inform future selections.\"\n  }, {\n    \"id\": 3,\n    \"name\": \"Ad selection, delivery, reporting\",\n    \"description\": \"The collection of information, and combination with previously collected information, to select and deliver advertisements for you, and to measure the delivery and effectiveness of such advertisements. This includes using previously collected information about your interests to select ads, processing data about what advertisements were shown, how often they were shown, when and where they were shown, and whether you took any action related to the advertisement, including for example clicking an ad or making a purchase. \"\n  }, {\n    \"id\": 4,\n    \"name\": \"Content selection, delivery, reporting\",\n    \"description\": \"The collection of information, and combination with previously collected information, to select and deliver content for you, and to measure the delivery and effectiveness of such content. This includes using previously collected information about your interests to select content, processing data about what content was shown, how often or how long it was shown, when and where it was shown, and whether the you took any action related to the content, including for example clicking on content. \"\n  }, {\n    \"id\": 5,\n    \"name\": \"Measurement\",\n    \"description\": \"The collection of information about your use of the content, and combination with previously collected information, used to measure, understand, and report on your usage of the content.\"\n  }],\n  \"features\": [{\n    \"id\": 1,\n    \"name\": \"Matching Data to Offline Sources\",\n    \"description\": \"Combining data from offline sources that were initially collected in other contexts.\"\n  }, {\n    \"id\": 2,\n    \"name\": \"Linking Devices\",\n    \"description\": \"Allow processing of a user's data to connect such user across multiple devices.\"\n  }, {\n    \"id\": 3,\n    \"name\": \"Precise Geographic Location Data\",\n    \"description\": \"Allow processing of a user's precise geographic location data in support of a purpose for which that certain third party has consent.\"\n  }],\n  \"vendors\": [{\n    \"id\": 8,\n    \"name\": \"Emerse Sverige AB\",\n    \"policyUrl\": \"https://www.emerse.com/privacy-policy/\",\n    \"purposeIds\": [1, 2, 4],\n    \"legIntPurposeIds\": [3, 5],\n    \"featureIds\": [1, 2]\n  }, {\n    \"id\": 12,\n    \"name\": \"BeeswaxIO Corporation\",\n    \"policyUrl\": \"https://www.beeswax.com/privacy.html\",\n    \"purposeIds\": [1, 3, 5],\n    \"legIntPurposeIds\": [],\n    \"featureIds\": [3]\n  }, {\n    \"id\": 28,\n    \"name\": \"TripleLift, Inc.\",\n    \"policyUrl\": \"https://triplelift.com/privacy/\",\n    \"purposeIds\": [1, 3],\n    \"legIntPurposeIds\": [],\n    \"featureIds\": [3]\n  }, {\n    \"id\": 9,\n    \"name\": \"AdMaxim Inc.\",\n    \"policyUrl\": \"http://www.admaxim.com/privacy/\",\n    \"purposeIds\": [1, 2, 3, 4, 5],\n    \"legIntPurposeIds\": [],\n    \"featureIds\": [1, 2, 3]\n  }, {\n    \"id\": 27,\n    \"name\": \"ADventori SAS\",\n    \"policyUrl\": \"https://www.adventori.com/with-us/legal-notice/\",\n    \"purposeIds\": [2],\n    \"legIntPurposeIds\": [1, 3, 4, 5],\n    \"featureIds\": []\n  }, {\n    \"id\": 25,\n    \"name\": \"Oath (EMEA) Limited\",\n    \"policyUrl\": \"https://policies.oath.com/ie/en/oath/privacy/index.html\",\n    \"purposeIds\": [1, 2],\n    \"legIntPurposeIds\": [3, 5],\n    \"featureIds\": [1, 2, 3]\n  }, {\n    \"id\": 26,\n    \"name\": \"Venatus Media Limited\",\n    \"policyUrl\": \"https://www.venatusmedia.com/privacy/\",\n    \"purposeIds\": [1, 2, 3, 4, 5],\n    \"legIntPurposeIds\": [],\n    \"featureIds\": []\n  }, {\n    \"id\": 1,\n    \"name\": \"Exponential Interactive, Inc\",\n    \"policyUrl\": \"http://exponential.com/privacy\",\n    \"purposeIds\": [1, 2, 3, 4, 5],\n    \"legIntPurposeIds\": [],\n    \"featureIds\": []\n  }, {\n    \"id\": 6,\n    \"name\": \"AdSpirit GmbH\",\n    \"policyUrl\": \"http://www.adspirit.de/privacy\",\n    \"purposeIds\": [1, 2, 3, 4, 5],\n    \"legIntPurposeIds\": [],\n    \"featureIds\": []\n  }, {\n    \"id\": 30,\n    \"name\": \"BidTheatre AB\",\n    \"policyUrl\": \"https://www.bidtheatre.com/privacy-policy\",\n    \"purposeIds\": [1, 2, 3],\n    \"legIntPurposeIds\": [],\n    \"featureIds\": [2, 3]\n  }, {\n    \"id\": 24,\n    \"name\": \"Conversant Europe Ltd.\",\n    \"policyUrl\": \"https://www.conversantmedia.eu/legal/privacy-policy\",\n    \"purposeIds\": [1],\n    \"legIntPurposeIds\": [2, 3, 4, 5],\n    \"featureIds\": [1, 2, 3]\n  }, {\n    \"id\": 29,\n    \"name\": \"Etarget SE\",\n    \"policyUrl\": \"https://www.etarget.sk/privacy.php\",\n    \"purposeIds\": [1, 2, 3, 4, 5],\n    \"legIntPurposeIds\": [],\n    \"featureIds\": [1]\n  }, {\n    \"id\": 39,\n    \"name\": \"ADITION technologies AG\",\n    \"policyUrl\": \"adition.com/datenschutz\",\n    \"purposeIds\": [],\n    \"legIntPurposeIds\": [1, 2, 3, 4, 5],\n    \"featureIds\": [1, 2, 3]\n  }, {\n    \"id\": 11,\n    \"name\": \"Quantcast International Limited\",\n    \"policyUrl\": \"https://www.quantcast.com/privacy/\",\n    \"purposeIds\": [1],\n    \"legIntPurposeIds\": [2, 3, 4, 5],\n    \"featureIds\": [1]\n  }, {\n    \"id\": 15,\n    \"name\": \"Adikteev\",\n    \"policyUrl\": \"https://www.adikteev.com/eu/privacy/\",\n    \"purposeIds\": [1, 2],\n    \"legIntPurposeIds\": [],\n    \"featureIds\": []\n  }, {\n    \"id\": 4,\n    \"name\": \"Roq.ad GmbH\",\n    \"policyUrl\": \"https://www.roq.ad/privacy-policy\",\n    \"purposeIds\": [1, 2, 3, 4, 5],\n    \"legIntPurposeIds\": [],\n    \"featureIds\": [2, 3]\n  }, {\n    \"id\": 7,\n    \"name\": \"Vibrant Media Limited\",\n    \"policyUrl\": \"https://www.vibrantmedia.com/en/privacy-policy/\",\n    \"purposeIds\": [2, 3, 4, 5],\n    \"legIntPurposeIds\": [1],\n    \"featureIds\": []\n  }, {\n    \"id\": 2,\n    \"name\": \"Captify Technologies Limited\",\n    \"policyUrl\": \"http://www.captify.co.uk/privacy-policy/\",\n    \"purposeIds\": [2, 3, 5],\n    \"legIntPurposeIds\": [1],\n    \"featureIds\": [2]\n  }, {\n    \"id\": 37,\n    \"name\": \"NEURAL.ONE\",\n    \"policyUrl\": \"https://web.neural.one/privacy-policy/\",\n    \"purposeIds\": [1, 2, 3, 5],\n    \"legIntPurposeIds\": [],\n    \"featureIds\": [1, 2]\n  }, {\n    \"id\": 13,\n    \"name\": \"Sovrn Holdings Inc\",\n    \"policyUrl\": \"https://www.sovrn.com/sovrn-privacy/\",\n    \"purposeIds\": [1, 2, 3],\n    \"legIntPurposeIds\": [],\n    \"featureIds\": [2, 3]\n  }, {\n    \"id\": 34,\n    \"name\": \"NEORY GmbH\",\n    \"policyUrl\": \"https://www.neory.com/privacy.html\",\n    \"purposeIds\": [1, 2, 4, 5],\n    \"legIntPurposeIds\": [3],\n    \"featureIds\": []\n  }, {\n    \"id\": 32,\n    \"name\": \"AppNexus Inc.\",\n    \"policyUrl\": \"https://www.appnexus.com/en/company/platform-privacy-policy\",\n    \"purposeIds\": [1],\n    \"legIntPurposeIds\": [3],\n    \"featureIds\": [2, 3]\n  }, {\n    \"id\": 10,\n    \"name\": \"Index Exchange, Inc. \",\n    \"policyUrl\": \"www.indexexchange.com/privacy\",\n    \"purposeIds\": [1, 2, 3, 4, 5],\n    \"legIntPurposeIds\": [],\n    \"featureIds\": [2, 3]\n  }, {\n    \"id\": 57,\n    \"name\": \"ADARA MEDIA UNLIMITED\",\n    \"policyUrl\": \"https://adara.com/2018/04/10/adara-gdpr-faq/\",\n    \"purposeIds\": [1, 2, 3, 4, 5],\n    \"legIntPurposeIds\": [],\n    \"featureIds\": [1, 2]\n  }, {\n    \"id\": 63,\n    \"name\": \"Avocet Systems Limited\",\n    \"policyUrl\": \"http://www.avocet.io/privacy-policy\",\n    \"purposeIds\": [],\n    \"legIntPurposeIds\": [1, 3],\n    \"featureIds\": []\n  }, {\n    \"id\": 51,\n    \"name\": \"xAd, Inc. dba GroundTruth\",\n    \"policyUrl\": \"https://www.groundtruth.com/privacy-policy/\",\n    \"purposeIds\": [1, 2, 3, 4, 5],\n    \"legIntPurposeIds\": [],\n    \"featureIds\": [1, 2, 3]\n  }, {\n    \"id\": 49,\n    \"name\": \"Tradelab, SAS\",\n    \"policyUrl\": \"http://tradelab.com/en/privacy/\",\n    \"purposeIds\": [1, 2, 3],\n    \"legIntPurposeIds\": [5],\n    \"featureIds\": [1, 2, 3]\n  }, {\n    \"id\": 45,\n    \"name\": \"Smart Adserver\",\n    \"policyUrl\": \"http://smartadserver.com/company/privacy-policy/\",\n    \"purposeIds\": [1, 2],\n    \"legIntPurposeIds\": [3, 5],\n    \"featureIds\": [3]\n  }, {\n    \"id\": 52,\n    \"name\": \"The Rubicon Project, Limited\",\n    \"policyUrl\": \"http://rubiconproject.com/rubicon-project-yield-optimization-privacy-policy/\",\n    \"purposeIds\": [1],\n    \"legIntPurposeIds\": [2, 3, 4, 5],\n    \"featureIds\": [3]\n  }, {\n    \"id\": 35,\n    \"name\": \"Purch Group, Inc.\",\n    \"policyUrl\": \"http://www.purch.com/privacy-policy/\",\n    \"purposeIds\": [1],\n    \"legIntPurposeIds\": [3, 5],\n    \"featureIds\": []\n  }, {\n    \"id\": 71,\n    \"name\": \"Dataxu, Inc. \",\n    \"policyUrl\": \"https://www.dataxu.com/about-us/privacy/data-collection-platform/\",\n    \"purposeIds\": [1, 2, 3],\n    \"legIntPurposeIds\": [],\n    \"featureIds\": [1, 2, 3]\n  }, {\n    \"id\": 79,\n    \"name\": \"MediaMath, Inc.\",\n    \"policyUrl\": \"http://www.mediamath.com/privacy-policy/\",\n    \"purposeIds\": [1],\n    \"legIntPurposeIds\": [2, 3, 4, 5],\n    \"featureIds\": [1, 2, 3]\n  }]\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (vendorList);\n\n//# sourceURL=webpack:///./client/vendorList.js?");

/***/ }),

/***/ "./node_modules/base-64/base64.js":
/*!****************************************!*\
  !*** ./node_modules/base-64/base64.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(module, global) {var __WEBPACK_AMD_DEFINE_RESULT__;/*! http://mths.be/base64 v0.1.0 by @mathias | MIT license */\n;(function(root) {\n\n\t// Detect free variables `exports`.\n\tvar freeExports = typeof exports == 'object' && exports;\n\n\t// Detect free variable `module`.\n\tvar freeModule = typeof module == 'object' && module &&\n\t\tmodule.exports == freeExports && module;\n\n\t// Detect free variable `global`, from Node.js or Browserified code, and use\n\t// it as `root`.\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n\t\troot = freeGlobal;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar InvalidCharacterError = function(message) {\n\t\tthis.message = message;\n\t};\n\tInvalidCharacterError.prototype = new Error;\n\tInvalidCharacterError.prototype.name = 'InvalidCharacterError';\n\n\tvar error = function(message) {\n\t\t// Note: the error messages used throughout this file match those used by\n\t\t// the native `atob`/`btoa` implementation in Chromium.\n\t\tthrow new InvalidCharacterError(message);\n\t};\n\n\tvar TABLE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\t// http://whatwg.org/html/common-microsyntaxes.html#space-character\n\tvar REGEX_SPACE_CHARACTERS = /[\\t\\n\\f\\r ]/g;\n\n\t// `decode` is designed to be fully compatible with `atob` as described in the\n\t// HTML Standard. http://whatwg.org/html/webappapis.html#dom-windowbase64-atob\n\t// The optimized base64-decoding algorithm used is based on @atk’s excellent\n\t// implementation. https://gist.github.com/atk/1020396\n\tvar decode = function(input) {\n\t\tinput = String(input)\n\t\t\t.replace(REGEX_SPACE_CHARACTERS, '');\n\t\tvar length = input.length;\n\t\tif (length % 4 == 0) {\n\t\t\tinput = input.replace(/==?$/, '');\n\t\t\tlength = input.length;\n\t\t}\n\t\tif (\n\t\t\tlength % 4 == 1 ||\n\t\t\t// http://whatwg.org/C#alphanumeric-ascii-characters\n\t\t\t/[^+a-zA-Z0-9/]/.test(input)\n\t\t) {\n\t\t\terror(\n\t\t\t\t'Invalid character: the string to be decoded is not correctly encoded.'\n\t\t\t);\n\t\t}\n\t\tvar bitCounter = 0;\n\t\tvar bitStorage;\n\t\tvar buffer;\n\t\tvar output = '';\n\t\tvar position = -1;\n\t\twhile (++position < length) {\n\t\t\tbuffer = TABLE.indexOf(input.charAt(position));\n\t\t\tbitStorage = bitCounter % 4 ? bitStorage * 64 + buffer : buffer;\n\t\t\t// Unless this is the first of a group of 4 characters…\n\t\t\tif (bitCounter++ % 4) {\n\t\t\t\t// …convert the first 8 bits to a single ASCII character.\n\t\t\t\toutput += String.fromCharCode(\n\t\t\t\t\t0xFF & bitStorage >> (-2 * bitCounter & 6)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t};\n\n\t// `encode` is designed to be fully compatible with `btoa` as described in the\n\t// HTML Standard: http://whatwg.org/html/webappapis.html#dom-windowbase64-btoa\n\tvar encode = function(input) {\n\t\tinput = String(input);\n\t\tif (/[^\\0-\\xFF]/.test(input)) {\n\t\t\t// Note: no need to special-case astral symbols here, as surrogates are\n\t\t\t// matched, and the input is supposed to only contain ASCII anyway.\n\t\t\terror(\n\t\t\t\t'The string to be encoded contains characters outside of the ' +\n\t\t\t\t'Latin1 range.'\n\t\t\t);\n\t\t}\n\t\tvar padding = input.length % 3;\n\t\tvar output = '';\n\t\tvar position = -1;\n\t\tvar a;\n\t\tvar b;\n\t\tvar c;\n\t\tvar d;\n\t\tvar buffer;\n\t\t// Make sure any padding is handled outside of the loop.\n\t\tvar length = input.length - padding;\n\n\t\twhile (++position < length) {\n\t\t\t// Read three bytes, i.e. 24 bits.\n\t\t\ta = input.charCodeAt(position) << 16;\n\t\t\tb = input.charCodeAt(++position) << 8;\n\t\t\tc = input.charCodeAt(++position);\n\t\t\tbuffer = a + b + c;\n\t\t\t// Turn the 24 bits into four chunks of 6 bits each, and append the\n\t\t\t// matching character for each of them to the output.\n\t\t\toutput += (\n\t\t\t\tTABLE.charAt(buffer >> 18 & 0x3F) +\n\t\t\t\tTABLE.charAt(buffer >> 12 & 0x3F) +\n\t\t\t\tTABLE.charAt(buffer >> 6 & 0x3F) +\n\t\t\t\tTABLE.charAt(buffer & 0x3F)\n\t\t\t);\n\t\t}\n\n\t\tif (padding == 2) {\n\t\t\ta = input.charCodeAt(position) << 8;\n\t\t\tb = input.charCodeAt(++position);\n\t\t\tbuffer = a + b;\n\t\t\toutput += (\n\t\t\t\tTABLE.charAt(buffer >> 10) +\n\t\t\t\tTABLE.charAt((buffer >> 4) & 0x3F) +\n\t\t\t\tTABLE.charAt((buffer << 2) & 0x3F) +\n\t\t\t\t'='\n\t\t\t);\n\t\t} else if (padding == 1) {\n\t\t\tbuffer = input.charCodeAt(position);\n\t\t\toutput += (\n\t\t\t\tTABLE.charAt(buffer >> 2) +\n\t\t\t\tTABLE.charAt((buffer << 4) & 0x3F) +\n\t\t\t\t'=='\n\t\t\t);\n\t\t}\n\n\t\treturn output;\n\t};\n\n\tvar base64 = {\n\t\t'encode': encode,\n\t\t'decode': decode,\n\t\t'version': '0.1.0'\n\t};\n\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttrue\n\t) {\n\t\t!(__WEBPACK_AMD_DEFINE_RESULT__ = (function() {\n\t\t\treturn base64;\n\t\t}).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t}\telse { var key; }\n\n}(this));\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/module.js */ \"./node_modules/webpack/buildin/module.js\")(module), __webpack_require__(/*! ./../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=webpack:///./node_modules/base-64/base64.js?");

/***/ }),

/***/ "./node_modules/consent-string/dist/consent-string.js":
/*!************************************************************!*\
  !*** ./node_modules/consent-string/dist/consent-string.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar _require = __webpack_require__(/*! ./encode */ \"./node_modules/consent-string/dist/encode.js\"),\n    encodeConsentString = _require.encodeConsentString;\n\nvar _require2 = __webpack_require__(/*! ./decode */ \"./node_modules/consent-string/dist/decode.js\"),\n    decodeConsentString = _require2.decodeConsentString;\n\n/**\n * Regular expression for validating\n */\n\n\nvar consentLanguageRegexp = /^[a-z]{2}$/;\n\nvar ConsentString = function () {\n  /**\n   * Initialize a new ConsentString object\n   *\n   * @param {string} baseString An existing consent string to parse and use for our initial values\n   */\n  function ConsentString() {\n    var baseString = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n    _classCallCheck(this, ConsentString);\n\n    this.created = new Date();\n    this.lastUpdated = new Date();\n\n    /**\n     * Version number of consent string specification\n     *\n     * @type {integer}\n     */\n    this.version = 1;\n\n    /**\n     * Vendor list with format from https://github.com/InteractiveAdvertisingBureau/GDPR-Transparency-and-Consent-Framework/blob/master/Draft_for_Public_Comment_Transparency%20%26%20Consent%20Framework%20-%20cookie%20and%20vendor%20list%20format%20specification%20v1.0a.pdf\n     *\n     * @type {object}\n     */\n    this.vendorList = null;\n\n    /**\n     * Version of the vendor list used for the purposes and vendors\n     *\n     * @type {integer}\n     */\n    this.vendorListVersion = null;\n\n    /**\n     * The unique ID of the CMP that last modified the consent string\n     *\n     * @type {integer}\n     */\n    this.cmpId = null;\n\n    /**\n     * Version of the code used by the CMP when collecting consent\n     *\n     * @type {integer}\n     */\n    this.cmpVersion = null;\n\n    /**\n     * ID of the screen used by CMP when collecting consent\n     *\n     * @type {integer}\n     */\n    this.consentScreen = null;\n\n    /**\n     * Two-letter ISO639-1 code (en, fr, de, etc.) of the language that the CMP asked consent in\n     *\n     * @type {string}\n     */\n    this.consentLanguage = null;\n\n    /**\n     * List of purpose IDs that the user has given consent to\n     *\n     * @type {integer[]}\n     */\n    this.allowedPurposeIds = [];\n\n    /**\n     * List of vendor IDs that the user has given consent to\n     *\n     * @type {integer[]}\n     */\n    this.allowedVendorIds = [];\n\n    // Decode the base string\n    if (baseString) {\n      Object.assign(this, decodeConsentString(baseString));\n    }\n  }\n\n  /**\n   * Get the web-safe, base64-encoded consent string\n   *\n   * @return {string} Web-safe, base64-encoded consent string\n   */\n\n\n  _createClass(ConsentString, [{\n    key: 'getConsentString',\n    value: function getConsentString() {\n      var updateDate = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n      if (!this.vendorList) {\n        throw new Error('ConsentString - A vendor list is required to encode a consent string');\n      }\n\n      if (updateDate === true) {\n        this.lastUpdated = new Date();\n      }\n\n      return encodeConsentString({\n        version: this.getVersion(),\n        vendorList: this.vendorList,\n        allowedPurposeIds: this.allowedPurposeIds,\n        allowedVendorIds: this.allowedVendorIds,\n        created: this.created,\n        lastUpdated: this.lastUpdated,\n        cmpId: this.cmpId,\n        cmpVersion: this.cmpVersion,\n        consentScreen: this.consentScreen,\n        consentLanguage: this.consentLanguage,\n        vendorListVersion: this.vendorListVersion\n      });\n    }\n\n    /**\n     * Get the version number that this consent string specification adheres to\n     *\n     * @return {integer} Version number of consent string specification\n     */\n\n  }, {\n    key: 'getVersion',\n    value: function getVersion() {\n      return this.version;\n    }\n\n    /**\n     * Get the version of the vendor list\n     *\n     * @return {integer} Vendor list version\n     */\n\n  }, {\n    key: 'getVendorListVersion',\n    value: function getVendorListVersion() {\n      return this.vendorListVersion;\n    }\n\n    /**\n     * Set the vendors list to use when generating the consent string\n     *\n     * The expected format is the one from https://github.com/InteractiveAdvertisingBureau/GDPR-Transparency-and-Consent-Framework/blob/master/Draft_for_Public_Comment_Transparency%20%26%20Consent%20Framework%20-%20cookie%20and%20vendor%20list%20format%20specification%20v1.0a.pdf\n     *\n     * @param {object} vendorList Vendor list with format from https://github.com/InteractiveAdvertisingBureau/GDPR-Transparency-and-Consent-Framework/blob/master/Draft_for_Public_Comment_Transparency%20%26%20Consent%20Framework%20-%20cookie%20and%20vendor%20list%20format%20specification%20v1.0a.pdf\n     */\n\n  }, {\n    key: 'setGlobalVendorList',\n    value: function setGlobalVendorList(vendorList) {\n      if ((typeof vendorList === 'undefined' ? 'undefined' : _typeof(vendorList)) !== 'object') {\n        throw new Error('ConsentString - You must provide an object when setting the global vendor list');\n      }\n\n      if (!vendorList.vendorListVersion || !Array.isArray(vendorList.purposes) || !Array.isArray(vendorList.vendors)) {\n        // The provided vendor list does not look valid\n        throw new Error('ConsentString - The provided vendor list does not respect the schema from the IAB EU’s GDPR Consent and Transparency Framework');\n      }\n\n      this.vendorList = vendorList;\n      this.vendorListVersion = vendorList.vendorListVersion;\n    }\n\n    /**\n     * Set the ID of the Consent Management Platform that last modified the consent string\n     *\n     * Every CMP is assigned a unique ID by the IAB EU that must be provided here before changing any other value in the consent string.\n     *\n     * @param {integer} id CMP ID\n     */\n\n  }, {\n    key: 'setCmpId',\n    value: function setCmpId(id) {\n      this.cmpId = id;\n    }\n\n    /**\n     * Get the ID of the Consent Management Platform from the consent string\n     *\n     * @return {integer}\n     */\n\n  }, {\n    key: 'getCmpId',\n    value: function getCmpId() {\n      return this.cmpId;\n    }\n\n    /**\n     * Set the version of the Consent Management Platform that last modified the consent string\n     *\n     * This version number references the CMP code running when collecting the user consent.\n     *\n     * @param {integer} version Version\n     */\n\n  }, {\n    key: 'setCmpVersion',\n    value: function setCmpVersion(version) {\n      this.cmpVersion = version;\n    }\n\n    /**\n     * Get the verison of the Consent Management Platform that last modified the consent string\n     *\n     * @return {integer}\n     */\n\n  }, {\n    key: 'getCmpVersion',\n    value: function getCmpVersion() {\n      return this.cmpVersion;\n    }\n\n    /**\n     * Set the Consent Management Platform screen ID that collected the user consent\n     *\n     * This screen ID references a unique view in the CMP that was displayed to the user to collect consent\n     *\n     * @param {*} screenId Screen ID\n     */\n\n  }, {\n    key: 'setConsentScreen',\n    value: function setConsentScreen(screenId) {\n      this.consentScreen = screenId;\n    }\n\n    /**\n     * Get the Consent Management Platform screen ID that collected the user consent\n     *\n     * @return {integer}\n     */\n\n  }, {\n    key: 'getConsentScreen',\n    value: function getConsentScreen() {\n      return this.consentScreen;\n    }\n\n    /**\n     * Set the language that the CMP asked the consent in\n     *\n     * @param {string} language Two-letter ISO639-1 code (en, fr, de, etc.)\n     */\n\n  }, {\n    key: 'setConsentLanguage',\n    value: function setConsentLanguage(language) {\n      if (consentLanguageRegexp.test(language) === false) {\n        throw new Error('ConsentString - The consent language must be a two-letter ISO639-1 code (en, fr, de, etc.)');\n      }\n\n      this.consentLanguage = language;\n    }\n\n    /**\n     * Get the language that the CMP asked consent in\n     *\n     * @return {string} Two-letter ISO639-1 code (en, fr, de, etc.)\n     */\n\n  }, {\n    key: 'getConsentLanguage',\n    value: function getConsentLanguage() {\n      return this.consentLanguage;\n    }\n\n    /**\n     * Set the list of purpose IDs that the user has given consent to\n     *\n     * @param {integer[]} purposeIds An array of integers that map to the purposes defined in the vendor list. Purposes included in the array are purposes that the user has given consent to\n     */\n\n  }, {\n    key: 'setPurposesAllowed',\n    value: function setPurposesAllowed(purposeIds) {\n      this.allowedPurposeIds = purposeIds;\n    }\n\n    /**\n     * Get the list of purpose IDs that the user has given consent to\n     *\n     * @return {integer[]}\n     */\n\n  }, {\n    key: 'getPurposesAllowed',\n    value: function getPurposesAllowed() {\n      return this.allowedPurposeIds;\n    }\n\n    /**\n     * Set the consent status of a user for a given purpose\n     *\n     * @param {integer} purposeId The ID (from the vendor list) of the purpose to update\n     * @param {boolean} value Consent status\n     */\n\n  }, {\n    key: 'setPurposeAllowed',\n    value: function setPurposeAllowed(purposeId, value) {\n      var purposeIndex = this.allowedPurposeIds.indexOf(purposeId);\n\n      if (value === true) {\n        if (purposeIndex === -1) {\n          this.allowedPurposeIds.push(purposeId);\n        }\n      } else if (value === false) {\n        if (purposeIndex !== -1) {\n          this.allowedPurposeIds.splice(purposeIndex);\n        }\n      }\n    }\n\n    /**\n     * Check if the user has given consent for a specific purpose\n     *\n     * @param {integer} purposeId\n     *\n     * @return {boolean}\n     */\n\n  }, {\n    key: 'isPurposeAllowed',\n    value: function isPurposeAllowed(purposeId) {\n      return this.purposes.indexOf(purposeId) !== -1;\n    }\n\n    /**\n     * Set the list of vendor IDs that the user has given consent to\n     *\n     * @param {integer[]} vendorIds An array of integers that map to the vendors defined in the vendor list. Vendors included in the array are vendors that the user has given consent to\n     */\n\n  }, {\n    key: 'setVendorsAllowed',\n    value: function setVendorsAllowed(vendorIds) {\n      this.allowedVendorIds = vendorIds;\n    }\n\n    /**\n     * Get the list of vendor IDs that the user has given consent to\n     *\n     * @return {integer[]}\n     */\n\n  }, {\n    key: 'getVendorsAllowed',\n    value: function getVendorsAllowed() {\n      return this.allowedVendorIds;\n    }\n\n    /**\n     * Set the consent status of a user for a given vendor\n     *\n     * @param {integer} vendorId The ID (from the vendor list) of the vendor to update\n     * @param {boolean} value Consent status\n     */\n\n  }, {\n    key: 'setVendorAllowed',\n    value: function setVendorAllowed(vendorId, value) {\n      var vendorIndex = this.allowedVendorIds.indexOf(vendorId);\n\n      if (value === true) {\n        if (vendorIndex === -1) {\n          this.allowedVendorIds.push(vendorId);\n        }\n      } else if (value === false) {\n        if (vendorIndex !== -1) {\n          this.allowedVendorIds.splice(vendorIndex);\n        }\n      }\n    }\n\n    /**\n     * Check if the user has given consent for a specific vendor\n     *\n     * @param {integer} vendorId\n     *\n     * @return {boolean}\n     */\n\n  }, {\n    key: 'isVendorAllowed',\n    value: function isVendorAllowed(vendorId) {\n      return this.allowedVendorIds.indexOf(vendorId) !== -1;\n    }\n  }]);\n\n  return ConsentString;\n}();\n\nmodule.exports = {\n  ConsentString: ConsentString\n};\n\n//# sourceURL=webpack:///./node_modules/consent-string/dist/consent-string.js?");

/***/ }),

/***/ "./node_modules/consent-string/dist/decode.js":
/*!****************************************************!*\
  !*** ./node_modules/consent-string/dist/decode.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var _require = __webpack_require__(/*! ./utils/bits */ \"./node_modules/consent-string/dist/utils/bits.js\"),\n    decodeBitsToIds = _require.decodeBitsToIds,\n    decodeFromBase64 = _require.decodeFromBase64;\n\n/**\n * Decode consent data from a web-safe base64-encoded string\n *\n * @param {string} consentString\n */\n\n\nfunction decodeConsentString(consentString) {\n  var _decodeFromBase = decodeFromBase64(consentString),\n      version = _decodeFromBase.version,\n      cmpId = _decodeFromBase.cmpId,\n      vendorListVersion = _decodeFromBase.vendorListVersion,\n      purposeIdBitString = _decodeFromBase.purposeIdBitString,\n      maxVendorId = _decodeFromBase.maxVendorId,\n      created = _decodeFromBase.created,\n      lastUpdated = _decodeFromBase.lastUpdated,\n      isRange = _decodeFromBase.isRange,\n      defaultConsent = _decodeFromBase.defaultConsent,\n      vendorIdBitString = _decodeFromBase.vendorIdBitString,\n      vendorRangeList = _decodeFromBase.vendorRangeList,\n      cmpVersion = _decodeFromBase.cmpVersion,\n      consentScreen = _decodeFromBase.consentScreen,\n      consentLanguage = _decodeFromBase.consentLanguage;\n\n  var consentStringData = {\n    version: version,\n    cmpId: cmpId,\n    vendorListVersion: vendorListVersion,\n    allowedPurposeIds: decodeBitsToIds(purposeIdBitString),\n    maxVendorId: maxVendorId,\n    created: created,\n    lastUpdated: lastUpdated,\n    cmpVersion: cmpVersion,\n    consentScreen: consentScreen,\n    consentLanguage: consentLanguage\n  };\n\n  if (isRange) {\n    /* eslint no-shadow: off */\n    var idMap = vendorRangeList.reduce(function (acc, _ref) {\n      var isRange = _ref.isRange,\n          startVendorId = _ref.startVendorId,\n          endVendorId = _ref.endVendorId;\n\n      var lastVendorId = isRange ? endVendorId : startVendorId;\n\n      for (var i = startVendorId; i <= lastVendorId; i += 1) {\n        acc[i] = true;\n      }\n\n      return acc;\n    }, {});\n\n    consentStringData.allowedVendorIds = [];\n\n    for (var i = 0; i <= maxVendorId; i += 1) {\n      if (defaultConsent && !idMap[i] || !defaultConsent && idMap[i]) {\n        if (consentStringData.allowedVendorIds.indexOf(i) === -1) {\n          consentStringData.allowedVendorIds.push(i);\n        }\n      }\n    }\n  } else {\n    consentStringData.allowedVendorIds = decodeBitsToIds(vendorIdBitString);\n  }\n\n  return consentStringData;\n}\n\nmodule.exports = {\n  decodeConsentString: decodeConsentString\n};\n\n//# sourceURL=webpack:///./node_modules/consent-string/dist/decode.js?");

/***/ }),

/***/ "./node_modules/consent-string/dist/encode.js":
/*!****************************************************!*\
  !*** ./node_modules/consent-string/dist/encode.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nvar _require = __webpack_require__(/*! ./utils/bits */ \"./node_modules/consent-string/dist/utils/bits.js\"),\n    encodeToBase64 = _require.encodeToBase64,\n    padRight = _require.padRight;\n\n/**\n * Encode a list of vendor IDs into bits\n *\n * @param {integer} maxVendorId Highest vendor ID in the vendor list\n * @param {integer[]} allowedVendorIds Vendors that the user has given consent to\n */\n\n\nfunction encodeVendorIdsToBits(maxVendorId) {\n  var allowedVendorIds = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n  var vendorString = '';\n\n  for (var id = 1; id <= maxVendorId; id += 1) {\n    vendorString += allowedVendorIds.indexOf(id) !== -1 ? '1' : '0';\n  }\n\n  return padRight(vendorString, Math.max(0, maxVendorId - vendorString.length));\n}\n\n/**\n * Encode a list of purpose IDs into bits\n *\n * @param {*} purposes List of purposes from the vendor list\n * @param {*} allowedPurposeIds List of purpose IDs that the user has given consent to\n */\nfunction encodePurposeIdsToBits(purposes) {\n  var allowedPurposeIds = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Set();\n\n  var maxPurposeId = Math.max.apply(Math, [0].concat(_toConsumableArray(purposes.map(function (_ref) {\n    var id = _ref.id;\n    return id;\n  })), _toConsumableArray(Array.from(allowedPurposeIds))));\n\n  var purposeString = '';\n\n  for (var id = 1; id <= maxPurposeId; id += 1) {\n    purposeString += allowedPurposeIds.indexOf(id) !== -1 ? '1' : '0';\n  }\n\n  return purposeString;\n}\n\n/**\n * Convert a list of vendor IDs to ranges\n *\n * @param {object[]} vendors List of vendors from the vendor list\n * @param {integer[]} allowedVendorIds List of vendor IDs that the user has given consent to\n */\nfunction convertVendorsToRanges(vendors, allowedVendorIds) {\n  var range = [];\n\n  return vendors.reduce(function (acc, _ref2, index) {\n    var id = _ref2.id;\n\n    if (allowedVendorIds.indexOf(id) !== -1) {\n      range.push(id);\n    }\n\n    // If the range has ended or at the end of vendors add entry to the list\n    if ((allowedVendorIds.indexOf(id) === -1 || index === vendors.length - 1) && range.length) {\n      var startVendorId = range.shift();\n      var endVendorId = range.pop();\n\n      range = [];\n\n      return [].concat(_toConsumableArray(acc), [{\n        isRange: typeof endVendorId === 'number',\n        startVendorId: startVendorId,\n        endVendorId: endVendorId\n      }]);\n    }\n\n    return acc;\n  }, []);\n}\n\n/**\n * Encode consent data into a web-safe base64-encoded string\n *\n * @param {object} consentData Data to include in the string (see `utils/definitions.js` for the list of fields)\n */\nfunction encodeConsentString(consentData) {\n  var maxVendorId = consentData.maxVendorId;\n  var _consentData$vendorLi = consentData.vendorList,\n      vendorList = _consentData$vendorLi === undefined ? {} : _consentData$vendorLi,\n      allowedPurposeIds = consentData.allowedPurposeIds,\n      allowedVendorIds = consentData.allowedVendorIds;\n  var _vendorList$vendors = vendorList.vendors,\n      vendors = _vendorList$vendors === undefined ? [] : _vendorList$vendors,\n      _vendorList$purposes = vendorList.purposes,\n      purposes = _vendorList$purposes === undefined ? [] : _vendorList$purposes;\n\n\n  if (!maxVendorId) {\n    // Find the max vendor ID from the vendor list if it has not been provided\n    maxVendorId = 0;\n\n    vendors.forEach(function (vendor) {\n      if (vendor.id > maxVendorId) {\n        maxVendorId = vendor.id;\n      }\n    });\n  }\n\n  // Encode the data with and without ranges and return the smallest encoded payload\n  var noRangesData = encodeToBase64(_extends({}, consentData, {\n    maxVendorId: maxVendorId,\n    purposeIdBitString: encodePurposeIdsToBits(purposes, allowedPurposeIds),\n    isRange: false,\n    vendorIdBitString: encodeVendorIdsToBits(maxVendorId, allowedVendorIds)\n  }));\n\n  var vendorRangeList = convertVendorsToRanges(vendors, allowedVendorIds);\n  var rangesData = encodeToBase64(_extends({}, consentData, {\n    maxVendorId: maxVendorId,\n    purposeIdBitString: encodePurposeIdsToBits(purposes, allowedPurposeIds),\n    isRange: true,\n    defaultConsent: false,\n    numEntries: vendorRangeList.length,\n    vendorRangeList: vendorRangeList\n  }));\n\n  return noRangesData.length < rangesData.length ? noRangesData : rangesData;\n}\n\nmodule.exports = {\n  encodeConsentString: encodeConsentString\n};\n\n//# sourceURL=webpack:///./node_modules/consent-string/dist/encode.js?");

/***/ }),

/***/ "./node_modules/consent-string/dist/index.js":
/*!***************************************************!*\
  !*** ./node_modules/consent-string/dist/index.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var _require = __webpack_require__(/*! ./consent-string */ \"./node_modules/consent-string/dist/consent-string.js\"),\n    ConsentString = _require.ConsentString;\n\nvar _require2 = __webpack_require__(/*! ./decode */ \"./node_modules/consent-string/dist/decode.js\"),\n    decodeConsentString = _require2.decodeConsentString;\n\nvar _require3 = __webpack_require__(/*! ./encode */ \"./node_modules/consent-string/dist/encode.js\"),\n    encodeConsentString = _require3.encodeConsentString;\n\nmodule.exports = {\n  ConsentString: ConsentString,\n  decodeConsentString: decodeConsentString,\n  encodeConsentString: encodeConsentString\n};\n\n//# sourceURL=webpack:///./node_modules/consent-string/dist/index.js?");

/***/ }),

/***/ "./node_modules/consent-string/dist/utils/bits.js":
/*!********************************************************!*\
  !*** ./node_modules/consent-string/dist/utils/bits.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\n/* eslint no-use-before-define: off */\n\nvar base64 = __webpack_require__(/*! base-64 */ \"./node_modules/base-64/base64.js\");\n\nvar _require = __webpack_require__(/*! ./definitions */ \"./node_modules/consent-string/dist/utils/definitions.js\"),\n    versionNumBits = _require.versionNumBits,\n    vendorVersionMap = _require.vendorVersionMap;\n\nfunction repeat(count) {\n  var string = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '0';\n\n  var padString = '';\n\n  for (var i = 0; i < count; i += 1) {\n    padString += string;\n  }\n\n  return padString;\n}\n\nfunction padLeft(string, padding) {\n  return repeat(Math.max(0, padding)) + string;\n}\n\nfunction padRight(string, padding) {\n  return string + repeat(Math.max(0, padding));\n}\n\nfunction encodeIntToBits(number, numBits) {\n  var bitString = '';\n\n  if (typeof number === 'number' && !isNaN(number)) {\n    bitString = parseInt(number, 10).toString(2);\n  }\n\n  // Pad the string if not filling all bits\n  if (numBits >= bitString.length) {\n    bitString = padLeft(bitString, numBits - bitString.length);\n  }\n\n  // Truncate the string if longer than the number of bits\n  if (bitString.length > numBits) {\n    bitString = bitString.substring(0, numBits);\n  }\n\n  return bitString;\n}\n\nfunction encodeBoolToBits(value) {\n  return encodeIntToBits(value === true ? 1 : 0, 1);\n}\n\nfunction encodeDateToBits(date, numBits) {\n  if (date instanceof Date) {\n    return encodeIntToBits(date.getTime() / 100, numBits);\n  }\n  return encodeIntToBits(date, numBits);\n}\n\nfunction encodeLetterToBits(letter, numBits) {\n  return encodeIntToBits(letter.toUpperCase().charCodeAt(0) - 65, numBits);\n}\n\nfunction encodeLanguageToBits(language) {\n  var numBits = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 12;\n\n  return encodeLetterToBits(language.slice(0, 1), numBits / 2) + encodeLetterToBits(language.slice(1), numBits / 2);\n}\n\nfunction decodeBitsToInt(bitString, start, length) {\n  return parseInt(bitString.substr(start, length), 2);\n}\n\nfunction decodeBitsToDate(bitString, start, length) {\n  return new Date(decodeBitsToInt(bitString, start, length) * 100);\n}\n\nfunction decodeBitsToBool(bitString, start) {\n  return parseInt(bitString.substr(start, 1), 2) === 1;\n}\n\nfunction decodeBitsToLetter(bitString) {\n  var letterCode = decodeBitsToInt(bitString);\n  return String.fromCharCode(letterCode + 65).toLowerCase();\n}\n\nfunction decodeBitsToLanguage(bitString, start, length) {\n  var languageBitString = bitString.substr(start, length);\n\n  return decodeBitsToLetter(languageBitString.slice(0, length / 2)) + decodeBitsToLetter(languageBitString.slice(length / 2));\n}\n\nfunction encodeField(_ref) {\n  var input = _ref.input,\n      field = _ref.field;\n  var name = field.name,\n      type = field.type,\n      numBits = field.numBits,\n      encoder = field.encoder,\n      validator = field.validator;\n\n\n  if (typeof validator === 'function') {\n    if (!validator(input)) {\n      return '';\n    }\n  }\n  if (typeof encoder === 'function') {\n    return encoder(input);\n  }\n\n  var bitCount = typeof numBits === 'function' ? numBits(input) : numBits;\n\n  var inputValue = input[name];\n  var fieldValue = inputValue === null || inputValue === undefined ? '' : inputValue;\n\n  switch (type) {\n    case 'int':\n      return encodeIntToBits(fieldValue, bitCount);\n    case 'bool':\n      return encodeBoolToBits(fieldValue);\n    case 'date':\n      return encodeDateToBits(fieldValue, bitCount);\n    case 'bits':\n      return padRight(fieldValue, bitCount - fieldValue.length).substring(0, bitCount);\n    case 'list':\n      return fieldValue.reduce(function (acc, listValue) {\n        return acc + encodeFields({\n          input: listValue,\n          fields: field.fields\n        });\n      }, '');\n    case 'language':\n      return encodeLanguageToBits(fieldValue, bitCount);\n    default:\n      throw new Error('ConsentString - Unknown field type ' + type + ' for encoding');\n  }\n}\n\nfunction encodeFields(_ref2) {\n  var input = _ref2.input,\n      fields = _ref2.fields;\n\n  return fields.reduce(function (acc, field) {\n    acc += encodeField({ input: input, field: field });\n\n    return acc;\n  }, '');\n}\n\nfunction decodeField(_ref3) {\n  var input = _ref3.input,\n      output = _ref3.output,\n      startPosition = _ref3.startPosition,\n      field = _ref3.field;\n  var type = field.type,\n      numBits = field.numBits,\n      decoder = field.decoder,\n      validator = field.validator,\n      listCount = field.listCount;\n\n\n  if (typeof validator === 'function') {\n    if (!validator(output)) {\n      // Not decoding this field so make sure we start parsing the next field at\n      // the same point\n      return { newPosition: startPosition };\n    }\n  }\n\n  if (typeof decoder === 'function') {\n    return decoder(input, output, startPosition);\n  }\n\n  var bitCount = typeof numBits === 'function' ? numBits(output) : numBits;\n\n  var listEntryCount = 0;\n  if (typeof listCount === 'function') {\n    listEntryCount = listCount(output);\n  } else if (typeof listCount === 'number') {\n    listEntryCount = listCount;\n  }\n\n  switch (type) {\n    case 'int':\n      return { fieldValue: decodeBitsToInt(input, startPosition, bitCount) };\n    case 'bool':\n      return { fieldValue: decodeBitsToBool(input, startPosition) };\n    case 'date':\n      return { fieldValue: decodeBitsToDate(input, startPosition, bitCount) };\n    case 'bits':\n      return { fieldValue: input.substr(startPosition, bitCount) };\n    case 'list':\n      return new Array(listEntryCount).fill().reduce(function (acc) {\n        var _decodeFields = decodeFields({\n          input: input,\n          fields: field.fields,\n          startPosition: acc.newPosition\n        }),\n            decodedObject = _decodeFields.decodedObject,\n            newPosition = _decodeFields.newPosition;\n\n        return {\n          fieldValue: [].concat(_toConsumableArray(acc.fieldValue), [decodedObject]),\n          newPosition: newPosition\n        };\n      }, { fieldValue: [], newPosition: startPosition });\n    case 'language':\n      return { fieldValue: decodeBitsToLanguage(input, startPosition, bitCount) };\n    default:\n      throw new Error('ConsentString - Unknown field type ' + type + ' for decoding');\n  }\n}\n\nfunction decodeFields(_ref4) {\n  var input = _ref4.input,\n      fields = _ref4.fields,\n      _ref4$startPosition = _ref4.startPosition,\n      startPosition = _ref4$startPosition === undefined ? 0 : _ref4$startPosition;\n\n  var position = startPosition;\n\n  var decodedObject = fields.reduce(function (acc, field) {\n    var name = field.name,\n        numBits = field.numBits;\n\n    var _decodeField = decodeField({\n      input: input,\n      output: acc,\n      startPosition: position,\n      field: field\n    }),\n        fieldValue = _decodeField.fieldValue,\n        newPosition = _decodeField.newPosition;\n\n    if (fieldValue !== undefined) {\n      acc[name] = fieldValue;\n    }\n\n    if (newPosition !== undefined) {\n      position = newPosition;\n    } else if (typeof numBits === 'number') {\n      position += numBits;\n    }\n\n    return acc;\n  }, {});\n\n  return {\n    decodedObject: decodedObject,\n    newPosition: position\n  };\n}\n\n/**\n * Encode the data properties to a bit string. Encoding will encode\n * either `selectedVendorIds` or the `vendorRangeList` depending on\n * the value of the `isRange` flag.\n */\nfunction encodeDataToBits(data, definitionMap) {\n  var version = data.version;\n\n\n  if (typeof version !== 'number') {\n    throw new Error('ConsentString - No version field to encode');\n  } else if (!definitionMap[version]) {\n    throw new Error('ConsentString - No definition for version ' + version);\n  } else {\n    var fields = definitionMap[version].fields;\n    return encodeFields({ input: data, fields: fields });\n  }\n}\n\n/**\n * Take all fields required to encode the consent string and produce the URL safe Base64 encoded value\n */\nfunction encodeToBase64(data) {\n  var definitionMap = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : vendorVersionMap;\n\n  var binaryValue = encodeDataToBits(data, definitionMap);\n\n  if (binaryValue) {\n    // Pad length to multiple of 8\n    var paddedBinaryValue = padRight(binaryValue, 7 - (binaryValue.length + 7) % 8);\n\n    // Encode to bytes\n    var bytes = '';\n    for (var i = 0; i < paddedBinaryValue.length; i += 8) {\n      bytes += String.fromCharCode(parseInt(paddedBinaryValue.substr(i, 8), 2));\n    }\n\n    // Make base64 string URL friendly\n    return base64.encode(bytes).replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=+$/, '');\n  }\n\n  return null;\n}\n\nfunction decodeConsentStringBitValue(bitString) {\n  var definitionMap = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : vendorVersionMap;\n\n  var version = decodeBitsToInt(bitString, 0, versionNumBits);\n\n  if (typeof version !== 'number') {\n    throw new Error('ConsentString - Unknown version number in the string to decode');\n  } else if (!vendorVersionMap[version]) {\n    throw new Error('ConsentString - Unsupported version ' + version + ' in the string to decode');\n  }\n\n  var fields = definitionMap[version].fields;\n\n  var _decodeFields2 = decodeFields({ input: bitString, fields: fields }),\n      decodedObject = _decodeFields2.decodedObject;\n\n  return decodedObject;\n}\n\n/**\n * Decode the (URL safe Base64) value of a consent string into an object.\n */\nfunction decodeFromBase64(consentString, definitionMap) {\n  // Add padding\n  var unsafe = consentString;\n  while (unsafe.length % 4 !== 0) {\n    unsafe += '=';\n  }\n\n  // Replace safe characters\n  unsafe = unsafe.replace(/-/g, '+').replace(/_/g, '/');\n\n  var bytes = base64.decode(unsafe);\n\n  var inputBits = '';\n  for (var i = 0; i < bytes.length; i += 1) {\n    var bitString = bytes.charCodeAt(i).toString(2);\n    inputBits += padLeft(bitString, 8 - bitString.length);\n  }\n\n  return decodeConsentStringBitValue(inputBits, definitionMap);\n}\n\nfunction decodeBitsToIds(bitString) {\n  return bitString.split('').reduce(function (acc, bit, index) {\n    if (bit === '1') {\n      if (acc.indexOf(index + 1) === -1) {\n        acc.push(index + 1);\n      }\n    }\n    return acc;\n  }, []);\n}\n\nmodule.exports = {\n  padRight: padRight,\n  padLeft: padLeft,\n  encodeField: encodeField,\n  encodeDataToBits: encodeDataToBits,\n  encodeIntToBits: encodeIntToBits,\n  encodeBoolToBits: encodeBoolToBits,\n  encodeDateToBits: encodeDateToBits,\n  encodeLanguageToBits: encodeLanguageToBits,\n  encodeLetterToBits: encodeLetterToBits,\n  encodeToBase64: encodeToBase64,\n  decodeBitsToIds: decodeBitsToIds,\n  decodeBitsToInt: decodeBitsToInt,\n  decodeBitsToDate: decodeBitsToDate,\n  decodeBitsToBool: decodeBitsToBool,\n  decodeBitsToLanguage: decodeBitsToLanguage,\n  decodeBitsToLetter: decodeBitsToLetter,\n  decodeFromBase64: decodeFromBase64\n};\n\n//# sourceURL=webpack:///./node_modules/consent-string/dist/utils/bits.js?");

/***/ }),

/***/ "./node_modules/consent-string/dist/utils/definitions.js":
/*!***************************************************************!*\
  !*** ./node_modules/consent-string/dist/utils/definitions.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n * Number of bits for encoding the version integer\n * Expected to be the same across versions\n */\nvar versionNumBits = 6;\n\n/**\n * Definition of the consent string encoded format\n *\n * From https://github.com/InteractiveAdvertisingBureau/GDPR-Transparency-and-Consent-Framework/blob/master/Draft_for_Public_Comment_Transparency%20%26%20Consent%20Framework%20-%20cookie%20and%20vendor%20list%20format%20specification%20v1.0a.pdf\n */\nvar vendorVersionMap = {\n  /**\n   * Version 1\n   */\n  1: {\n    version: 1,\n    fields: [{ name: 'version', type: 'int', numBits: 6 }, { name: 'created', type: 'date', numBits: 36 }, { name: 'lastUpdated', type: 'date', numBits: 36 }, { name: 'cmpId', type: 'int', numBits: 12 }, { name: 'cmpVersion', type: 'int', numBits: 12 }, { name: 'consentScreen', type: 'int', numBits: 6 }, { name: 'consentLanguage', type: 'language', numBits: 12 }, { name: 'vendorListVersion', type: 'int', numBits: 12 }, { name: 'purposeIdBitString', type: 'bits', numBits: 24 }, { name: 'maxVendorId', type: 'int', numBits: 16 }, { name: 'isRange', type: 'bool', numBits: 1 }, {\n      name: 'vendorIdBitString',\n      type: 'bits',\n      numBits: function numBits(decodedObject) {\n        return decodedObject.maxVendorId;\n      },\n      validator: function validator(decodedObject) {\n        return !decodedObject.isRange;\n      }\n    }, {\n      name: 'defaultConsent',\n      type: 'bool',\n      numBits: 1,\n      validator: function validator(decodedObject) {\n        return decodedObject.isRange;\n      }\n    }, {\n      name: 'numEntries',\n      numBits: 12,\n      type: 'int',\n      validator: function validator(decodedObject) {\n        return decodedObject.isRange;\n      }\n    }, {\n      name: 'vendorRangeList',\n      type: 'list',\n      listCount: function listCount(decodedObject) {\n        return decodedObject.numEntries;\n      },\n      validator: function validator(decodedObject) {\n        return decodedObject.isRange;\n      },\n      fields: [{\n        name: 'isRange',\n        type: 'bool',\n        numBits: 1\n      }, {\n        name: 'startVendorId',\n        type: 'int',\n        numBits: 16\n      }, {\n        name: 'endVendorId',\n        type: 'int',\n        numBits: 16,\n        validator: function validator(decodedObject) {\n          return decodedObject.isRange;\n        }\n      }]\n    }]\n  }\n};\n\nmodule.exports = {\n  versionNumBits: versionNumBits,\n  vendorVersionMap: vendorVersionMap\n};\n\n//# sourceURL=webpack:///./node_modules/consent-string/dist/utils/definitions.js?");

/***/ }),

/***/ "./node_modules/webpack/buildin/global.js":
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n\n\n//# sourceURL=webpack:///(webpack)/buildin/global.js?");

/***/ }),

/***/ "./node_modules/webpack/buildin/module.js":
/*!***********************************!*\
  !*** (webpack)/buildin/module.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n\n\n//# sourceURL=webpack:///(webpack)/buildin/module.js?");

/***/ })

/******/ });